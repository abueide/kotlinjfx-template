/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

plugins {
    java
    application
    kotlin("jvm") version "1.4.10"
    kotlin("plugin.serialization") version "1.4.10"
    id("org.openjfx.javafxplugin") version "0.0.9"
    id("org.beryx.jlink") version "2.22.1"
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime:1.0-M1-1.4.0-rc")
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
}

application {
    mainModule.set("com.abysl.trader")
    mainClassName = "com.abysl.trader.MainKt"
}

javafx {
    version = "14"
    modules = listOf("javafx.controls", "javafx.web", "javafx.fxml")
}

jlink {
    options.set(listOf("--strip-debug", "--compress", "2", "--no-header-files", "--no-man-pages"))

    launcher {
        name = "Trader"
    }

    jpackage {
        resourceDir = file("$buildDir/resources")
        imageOptions = listOf("--icon", "src/main/resources/com/abysl/trader/images/anarchy.ico")
        installerOptions = listOf("--win-per-user-install", "--win-dir-chooser", "--win-menu")
        appVersion = project.version.toString()
    }
}

tasks.jpackageImage {
    doLast {
        copy {
//            from("bin/")
//            include("*.exe")
//            include("*.dll")
//            into("$buildDir/jpackage/Chaos/bin/")
        }
    }
}


tasks.classes {
//    dependsOn("createBin")
}

tasks.clean {
    doFirst {
//        delete("bin/")
    }
}

/*task("createBin") {
    dependsOn(":inject:installRelease")
    dependsOn(":exalt:linkRelease")
    doLast {
        copy {
            from(project(":inject").buildDir.path + "/exe/main/release/inject.exe")
            into("bin/")
        }
        copy {
            from(project(":exalt").buildDir.path + "/lib/main/release/exalt.dll")
            into("bin/")
        }
        copy {
            from("C:\\Users\\Andrew\\programming\\rotmg\\chaoshook\\chaoshook\\x64\\Release\\chaoshook.dll")
            into("bin/")
        }
    }
}*/
